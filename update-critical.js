#!/usr/bin/env node

// ========================================================================================================
// üö® SCRIPT DE ATUALIZA√á√ÉO CR√çTICA - VERS√ÉO 3.3
// ========================================================================================================
// Este script garante que o usu√°rio est√° executando a vers√£o mais recente do bot
// com todas as corre√ß√µes cr√≠ticas aplicadas
// ========================================================================================================

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üö® INICIANDO ATUALIZA√á√ÉO CR√çTICA - VERS√ÉO 3.3');
console.log('='.repeat(60));

function runCommand(command, description) {
    console.log(`\nüîß ${description}...`);
    try {
        const output = execSync(command, { encoding: 'utf8', stdio: 'pipe' });
        console.log(`‚úÖ ${description} - Conclu√≠do`);
        if (output.trim()) {
            console.log(`üìÑ Sa√≠da: ${output.trim()}`);
        }
        return true;
    } catch (error) {
        console.error(`‚ùå ${description} - Erro:`, error.message);
        return false;
    }
}

function checkVersion() {
    console.log('\nüìã Verificando vers√£o atual...');
    
    try {
        const indexPath = path.join(__dirname, 'index.js');
        const indexContent = fs.readFileSync(indexPath, 'utf8');
        
        if (indexContent.includes('VERS√ÉO CORRIGIDA 3.3')) {
            console.log('‚úÖ Vers√£o 3.3 detectada - Corre√ß√µes cr√≠ticas presentes');
            return true;
        } else {
            console.log('‚ùå Vers√£o desatualizada detectada - Atualizando...');
            return false;
        }
    } catch (error) {
        console.error('‚ùå Erro ao verificar vers√£o:', error.message);
        return false;
    }
}

async function main() {
    console.log('üöÄ Iniciando processo de atualiza√ß√£o cr√≠tica...\n');
    
    // 1. Verificar vers√£o atual
    const isLatestVersion = checkVersion();
    
    if (!isLatestVersion) {
        console.log('\nüîÑ Atualizando para a vers√£o mais recente...');
        
        // 2. Fazer pull das √∫ltimas altera√ß√µes
        if (!runCommand('git pull origin main', 'Baixando √∫ltimas altera√ß√µes')) {
            console.error('‚ùå Falha ao baixar atualiza√ß√µes. Verifique sua conex√£o git.');
            process.exit(1);
        }
        
        // 3. Verificar novamente
        if (!checkVersion()) {
            console.error('‚ùå Falha ao atualizar para a vers√£o 3.3');
            process.exit(1);
        }
    }
    
    // 4. Instalar/atualizar depend√™ncias
    runCommand('npm install', 'Instalando/atualizando depend√™ncias');
    
    // 5. Verificar arquivos cr√≠ticos
    console.log('\nüîç Verificando arquivos cr√≠ticos...');
    
    const criticalFiles = [
        'index.js',
        'utils/Sender.js',
        'handlers/AdsHandler.js',
        'config.json'
    ];
    
    let allFilesOk = true;
    for (const file of criticalFiles) {
        if (fs.existsSync(file)) {
            console.log(`‚úÖ ${file} - Presente`);
        } else {
            console.error(`‚ùå ${file} - AUSENTE`);
            allFilesOk = false;
        }
    }
    
    if (!allFilesOk) {
        console.error('‚ùå Arquivos cr√≠ticos ausentes. Verifique a instala√ß√£o.');
        process.exit(1);
    }
    
    // 6. Verificar estrutura de dados
    console.log('\nüìÅ Verificando estrutura de dados...');
    
    const dataDir = path.join(__dirname, 'data');
    if (!fs.existsSync(dataDir)) {
        fs.mkdirSync(dataDir, { recursive: true });
        console.log('‚úÖ Diret√≥rio data/ criado');
    }
    
    const adsFile = path.join(dataDir, 'ads.json');
    if (!fs.existsSync(adsFile)) {
        fs.writeFileSync(adsFile, JSON.stringify({ anuncios: {} }, null, 2));
        console.log('‚úÖ Arquivo ads.json criado');
    }
    
    console.log('\nüéâ ATUALIZA√á√ÉO CR√çTICA CONCLU√çDA COM SUCESSO!');
    console.log('='.repeat(60));
    console.log('‚úÖ Bot atualizado para a vers√£o 3.3');
    console.log('‚úÖ Corre√ß√µes validateAndGetParts aplicadas');
    console.log('‚úÖ Sistema de responsividade corrigido');
    console.log('‚úÖ Prote√ß√£o global contra erros ativada');
    console.log('\nüöÄ Agora voc√™ pode iniciar o bot com: node index.js');
    console.log('üß™ Para testar: envie !test ou !teste para qualquer chat');
    console.log('\nüí° IMPORTANTE: Se o bot n√£o responder, verifique os logs para:');
    console.log('   - Mensagens [PROCESS-3.3]');
    console.log('   - Mensagens [CRITICAL-TEST]');
    console.log('   - Mensagens [GLOBAL-PROTECTION]');
}

main().catch(error => {
    console.error('‚ùå Erro durante a atualiza√ß√£o:', error);
    process.exit(1);
});