#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const chalk = require('chalk');

// Fun√ß√£o para executar comandos e mostrar output
function runCommand(command, description) {
    console.log(chalk.blue(`\nüîÑ ${description}...`));
    try {
        const output = execSync(command, { 
            encoding: 'utf8',
            stdio: 'pipe'
        });
        console.log(chalk.green(`‚úÖ ${description} conclu√≠do!`));
        if (output.trim()) {
            console.log(chalk.gray(output));
        }
        return true;
    } catch (error) {
        console.log(chalk.red(`‚ùå Erro em: ${description}`));
        console.log(chalk.red(error.message));
        return false;
    }
}

// Fun√ß√£o para mostrar logo
function showLogo() {
    console.log(chalk.cyan(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    ü§ñ BOT ADMIN UPDATER                      ‚ïë
‚ïë                   Sistema de Atualiza√ß√£o                     ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
`));
}

// Fun√ß√£o para verificar se h√° atualiza√ß√µes
function checkForUpdates() {
    console.log(chalk.blue('\nüîç Verificando atualiza√ß√µes...'));
    
    try {
        // Fazer fetch das √∫ltimas altera√ß√µes
        execSync('git fetch origin', { stdio: 'pipe' });
        
        // Verificar se h√° commits novos
        const status = execSync('git status -uno', { encoding: 'utf8' });
        
        if (status.includes('Your branch is behind')) {
            console.log(chalk.yellow('üì¶ Novas atualiza√ß√µes dispon√≠veis!'));
            return true;
        } else if (status.includes('Your branch is up to date')) {
            console.log(chalk.green('‚úÖ Voc√™ j√° est√° na vers√£o mais recente!'));
            return false;
        } else {
            console.log(chalk.blue('‚ÑπÔ∏è Status do reposit√≥rio verificado.'));
            return true; // Prosseguir com a atualiza√ß√£o mesmo assim
        }
    } catch (error) {
        console.log(chalk.red(`‚ùå Erro ao verificar atualiza√ß√µes: ${error.message}`));
        return false;
    }
}

// Fun√ß√£o principal de atualiza√ß√£o
async function updateBot() {
    showLogo();
    
    console.log(chalk.yellow('üöÄ Iniciando processo de atualiza√ß√£o...'));
    
    // Verificar atualiza√ß√µes
    const hasUpdates = checkForUpdates();
    if (!hasUpdates) {
        console.log(chalk.green('\nüéâ Nenhuma atualiza√ß√£o necess√°ria!'));
        return;
    }
    
    // Fazer stash das altera√ß√µes locais se houver
    console.log(chalk.blue('\nüíæ Salvando altera√ß√µes locais...'));
    try {
        execSync('git stash', { stdio: 'pipe' });
        console.log(chalk.green('‚úÖ Altera√ß√µes locais salvas!'));
    } catch (error) {
        console.log(chalk.yellow('‚ö†Ô∏è Nenhuma altera√ß√£o local para salvar.'));
    }
    
    // Fazer pull das atualiza√ß√µes
    if (!runCommand('git pull origin main', 'Baixando atualiza√ß√µes')) {
        console.log(chalk.red('\n‚ùå Falha na atualiza√ß√£o.'));
        process.exit(1);
    }
    
    // Instalar depend√™ncias se necess√°rio
    if (fs.existsSync('package.json')) {
        runCommand('npm install', 'Instalando depend√™ncias');
    }
    
    // Tentar restaurar stash
    try {
        execSync('git stash pop', { stdio: 'pipe' });
        console.log(chalk.green('‚úÖ Altera√ß√µes locais restauradas!'));
    } catch (error) {
        console.log(chalk.yellow('‚ö†Ô∏è Nenhuma altera√ß√£o local para restaurar.'));
    }
    
    // Mostrar resultado final
    console.log(chalk.green(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    ‚úÖ ATUALIZA√á√ÉO CONCLU√çDA!                 ‚ïë
‚ïë                                                              ‚ïë
‚ïë  üéâ Bot atualizado com sucesso!                              ‚ïë
‚ïë  üîÑ Configura√ß√µes preservadas                                ‚ïë
‚ïë                                                              ‚ïë
‚ïë  üöÄ Execute: npm start                                       ‚ïë
‚ïë     Para iniciar o bot atualizado                           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
`));
}

// Executar se chamado diretamente
if (require.main === module) {
    updateBot().catch(error => {
        console.log(chalk.red(`‚ùå Erro fatal: ${error.message}`));
        process.exit(1);
    });
}

module.exports = { updateBot };